lib.py{
	class name: Library()
	/- values -/
	RoomData
	MapData
	MobData
	CharData
	itemData
	/- methods -/
	def roomSetting(path = "../settings/roominfo.json", mode = "auto")
	def mapSetting(size = "3x3", mode = "auto")
	def mobSetting(path = "../settings/monsters.json", mode = "auto")
	def charSettting(path = "../settings/characters.json", mode = "auto")
	def itemSetting(path = "../setttings/items.json", mode = "auto")
	/- base form -/
	a = Library()
	a.roomSetting()
	a.RoomData.printAllObject()
	a.mapSetting("3x3", 2)
	a.MapData.printMaptable()
	a.mobSetting()
	a.MobData.printAllObject()
	a.charSettting()
	a.CharData.printAllObject()
	a.itemSetting()
	a.ItemData.printAllObject()
}
d40lib.py{
	class name: StdIOFile(path = "")
	/- values -/
	path < file url
	jsonText < string
	jsonData < json
	file < codecs
	/- methods -/
	def readFile() < jsonText setting
	def parseFile() < jsonData settting
	def jsonReturn() < json < return jsonData
	/- base form -/
	val = StdIOFile(fileUrl)
	> get jsonData <
	json = val.jsonReturn()
}
roominfo.py{
	class name: Room(path = "../settings/roominfo.json")
	/- values -/
	lib	< d49lib obj
	jsondata < json
	number < dick , {key, jsondata}
	/- methods -/
	def getAllObject() < save number
	def getObjNameIs(string) < json <(find json cpm param-1)
	def printAllObject() < print object
	/- base form -/
	val = Rooms(FileUrl)
	> print All Object <
	val.printAllObject()
	> select object to name <
	selectItem = val.getObjNameIs(roomName)
}
maps.py{	Not Yet
	class name: Maps(size, floor) < now size choose 5x5, 3x3
	/- values -/
	size < map size 3x3 = 3, 5x5 = 5
	jsonData < json
	mapname < name
	floor < floor
	/- methods -/
	def completMaps() < create Maps and save json file
	def findNumber(roomNumber) < return roomNumber room information
}
characters.py{
	class name: Character(path = "../settings/characters.json")
	/- values -/
	lib
	jsonData
	charnames < list
	/- methods -/
	def getAllObject() < parse json to string
	def ToJson() < return Json data
	def getNameis(characterName) < return object of characterName
	def getObjtoName(characterObj, attribute) < return attribute of Character name's object
	def printAllObject() < print all of object
	/- base form -/
	val = Charater(jsonDataUrl)
	> get character's hp <
	self.hp = val.getObjtoName(val.getNameis(characterName), "hp")
	print(self.hp)
}
items.py{
	class name: Items(path = "../settings/items.json")
	/- values -/
	lib
	jsonData
	name < list, same thing characters's charnames
	/- methods -/
	def getAllObject() < parse json to string
	def getNameis(ItemName) < return object of ItemName
	def getObjtoName(ItemObj, attribute) < return attribute of Item name's object
	def printAllObject(self)
	def ToJson(self)
	/- base form -/
	val = Items(jsonDataUrl)
	> get Items number <
	self.numberOfItem = val.getObjtoName(val.getNameis(ItemName), "number")
	print(self.numberOfItem)
}